{"version":3,"sources":["components/HorizonLine.js","modals/RegisterModal.js","modals/LogInModal.js","layouts/Header.js","layouts/Footer.js","layouts/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["HorizonLine","text","className","SignUpModal","show","onHide","Modal","size","centered","Header","closeButton","Title","id","Body","Form","Group","controlId","Label","Control","placeholder","type","Button","variant","render","renderProps","onClick","disabled","style","backgroundColor","borderColor","SignInModal","useState","RegisterModalOn","setRegisterModalOn","LogInModalOn","setLogInModalOn","RegisterModal","LogInModal","Navbar","bg","expand","Container","Brand","Toggle","Collapse","Nav","Link","Footer","textAlign","Layout","children","App","minHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce5504d5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst HorizonLine = ({ text }) => {\r\n    return (\r\n        <div className=\"horizontal\">\r\n            <span>{text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HorizonLine;\r\n","import React from 'react'\r\nimport { Modal, Button, Form } from 'react-bootstrap'\r\nimport { GoogleLogin } from 'react-google-login'\r\nimport HorizontalLine from '../components/HorizonLine'\r\n\r\nconst SignUpModal = ({ show, onHide }) => {\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          회원가입\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>닉네임</Form.Label>\r\n            <Form.Control placeholder=\"Enter nickname\" />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>이메일</Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Label>비밀번호</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Password\" />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Label>비밀번호 확인</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Confirm password\" />\r\n          </Form.Group>\r\n\r\n          <div className=\"d-grid gap-2 my-3\">\r\n            <Button variant=\"info\" type=\"button\">\r\n              회원가입\r\n            </Button>\r\n            <HorizontalLine text={\"OR\"} />\r\n            <GoogleLogin\r\n              render={(renderProps) => {\r\n                return (\r\n                  <Button\r\n                    onClick={renderProps.onClick}\r\n                    disabled={renderProps.disabled}\r\n                    style={{\r\n                      backgroundColor: \"#176BEF\",\r\n                      borderColor: \"#176BEF\",\r\n                    }}\r\n                  >\r\n                    <i className=\"fab fa-google\">&nbsp;</i>Register With Google\r\n                  </Button>\r\n                );\r\n              }}\r\n            />\r\n          </div>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default SignUpModal;","import React from 'react'\r\nimport { Modal, Button, Form } from 'react-bootstrap'\r\nimport { GoogleLogin } from 'react-google-login'\r\nimport HorizontalLine from '../components/HorizonLine'\r\n\r\nconst SignInModal = ({ show, onHide }) => {\r\n    return (\r\n        <Modal\r\n          show={show}\r\n          onHide={onHide}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              로그인\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>이메일</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n              </Form.Group>\r\n    \r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>비밀번호</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n              </Form.Group>\r\n            </Form>\r\n\r\n            <div className=\"d-grid gap-2 my-3\">\r\n            <Button variant=\"info\" type=\"button\">\r\n              로그인\r\n            </Button>\r\n            <HorizontalLine text={\"OR\"} />\r\n            <GoogleLogin\r\n              render={(renderProps) => {\r\n                return (\r\n                  <Button\r\n                    onClick={renderProps.onClick}\r\n                    disabled={renderProps.disabled}\r\n                    style={{\r\n                      backgroundColor: \"#176BEF\",\r\n                      borderColor: \"#176BEF\",\r\n                    }}\r\n                  >\r\n                    <i className=\"fab fa-google\">&nbsp;</i>Log In With Google\r\n                  </Button>\r\n                );\r\n              }}\r\n            />\r\n          </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      )\r\n    }\r\n\r\nexport default SignInModal;","import React, { useState } from 'react'\nimport { Navbar, Nav, Button, Container } from \"react-bootstrap\";\nimport RegisterModal from '../modals/RegisterModal';\nimport LogInModal from '../modals/LogInModal';\n\nconst Header = () => {\n    const [RegisterModalOn, setRegisterModalOn] = useState(false);\n    const [LogInModalOn, setLogInModalOn] = useState(false);\n\n    return (\n        <>\n            <RegisterModal\n                show={RegisterModalOn}\n                onHide={() => setRegisterModalOn(false)}\n            />\n            <LogInModal\n                show={LogInModalOn}\n                onHide={() => setLogInModalOn(false)}\n            />\n            <header>\n                <Navbar bg=\"light\" expand=\"lg\">\n                    <Container>\n                        <Navbar.Brand>DMoon</Navbar.Brand>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav className=\"ms-auto\">\n                                <Nav.Link>\n                                    <Button variant=\"primary\" onClick={() => setLogInModalOn(true)}>로그인</Button>\n                                </Nav.Link>\n                                <Nav.Link>\n                                    <Button variant=\"secondary\" onClick={() => setRegisterModalOn(true)}>회원가입</Button>\n                                </Nav.Link>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Container>\n                </Navbar>\n            </header>\n        </>\n    );\n};\n\nexport default Header;\n","import React from 'react'\nimport { Container } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <div style={{ textAlign: \"center\" }}>\n          &copy; 2021 Luna. All Rights Reserved.\n        </div>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\n\n\nconst Layout = ({ children }) => {\n    return (\n    <>\n        <Header />\n        {children}\n        <Footer />\n    </>\n    );\n};\n\nexport default Layout;","import { Container } from \"react-bootstrap\";\nimport Layout from \"./layouts/Layout\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Container style={{ minHeight: \"75vh\" }}>apaap</Container>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}